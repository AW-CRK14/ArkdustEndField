plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
}

version = core_mod_version
group = mod_group_id

repositories {
    mavenLocal()

    maven {
        url "https://mvn.cloud.alipay.com/nexus/content/repositories/open/"
    }

    maven{
        url 'https://maven.aliyun.com/nexus/content/groups/public/'
    }

    maven {
        url 'https://maven.aliyun.com/nexus/content/repositories/google'
    }

    maven {
        name 'IzzelAliz Maven'
        url 'https://maven.izzel.io/releases/'
    }

    maven {
        name 'Curse Maven'
        url = "https://www.cursemaven.com"
    }
}

base {
    archivesName = core_mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.core_mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.core_mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.core_mod_id
    }

    data {
        programArguments.addAll '--mod', project.core_mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : core_mod_id, mod_name: core_mod_name, mod_license: core_mod_license, mod_version: core_mod_version,
            mod_authors         : brea_mod_authors, mod_description: brea_mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
