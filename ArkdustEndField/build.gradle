base {
    archivesName = arkdust_mod_id
}

mixin {
    config("${brea_mod_id}.mixins.json")
    config("${arkdust_mod_id}.mixins.json")
}

// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
//        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
//        systemProperty 'forge.logging.console.level', 'debug'

//        modSource project.sourceSets.main

        modSource project(":BreakdownCore").sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        // example of overriding the workingDirectory set in configureEach above,
        // uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource,
        // and where to look for existing resources.
        programArguments.addAll '--mod', arkdust_mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : arkdust_mod_id,
            mod_name               : arkdust_mod_name,
            mod_license            : mod_license,
            mod_version            : arkdust_mod_version,
            mod_authors            : arkdust_mod_authors,
            mod_description        : arkdust_mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir project(':ArkdustEndField').file('src/generated/resources')
    srcDir project(':BreakdownCore').file('src/generated/resources')
}

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}


dependencies {
    implementation project(":BreakdownCore")
    implementation "curse.maven:modern-ui-${modernui_path}"

    // Modern UI core framework
    implementation "icyllis.modernui:ModernUI-Core:${modernui_version}"
    // Modern UI core extensions
    implementation "icyllis.modernui:ModernUI-Markdown:${modernui_version}"
}
