plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
    id 'net.neoforged.gradle.mixin' version '7.0.80'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenLocal()

    maven {
        url "https://mvn.cloud.alipay.com/nexus/content/repositories/open/"
    }

    maven{
        url 'https://maven.aliyun.com/nexus/content/groups/public/'
    }

    maven {
        url 'https://maven.aliyun.com/nexus/content/repositories/google'
    }

    maven {
        name 'IzzelAliz Maven'
        url 'https://maven.izzel.io/releases/'
    }

    maven {
        name 'Curse Maven'
        url "https://www.cursemaven.com"
    }
}

mixin {
    config("${core_mod_id}.mixins.json")
    config("${main_mod_id}.mixins.json")
}

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'info'

        modSource project.sourceSets.main
        modSource project(":BreakdownCore").sourceSets.main

//        dependencies {
//            runtime "net.neoforged:neoforge:${neo_version}"
//            runtime project(":BreakdownCore")
//            runtime "icyllis.modernui:ModernUI-Core:${modernui_version}"
//            runtime "icyllis.modernui:ModernUI-Markdown:${modernui_version}"
//        }
    }

    client {
    }

    server {
        programArgument '--nogui'
    }

    gameTestServer {
//        systemProperty 'forge.enabledGameTestNamespaces', project.main_mod_id
    }

    data {
        programArguments.addAll '--mod', project.main_mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

base {
    archivesName = main_mod_id
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : main_mod_id, mod_name: main_mod_name, mod_license: main_mod_license, mod_version: main_mod_version,
            mod_authors         : arkdust_mod_authors, mod_description: arkdust_mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

sourceSets.main.resources {
    srcDir 'ArkdustEndField/src/generated/resources'
    srcDir 'BreakdownCore/src/generated/resources'
}

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}


dependencies {

    implementation "net.neoforged:neoforge:${neo_version}"
    implementation project(":BreakdownCore")
//    runtimeOnly project(':BreakdownCore')
    implementation "curse.maven:modern-ui-${modernui_path}"

    // Modern UI core framework
    implementation "icyllis.modernui:ModernUI-Core:${modernui_version}"
    // Modern UI core extensions
    implementation "icyllis.modernui:ModernUI-Markdown:${modernui_version}"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
